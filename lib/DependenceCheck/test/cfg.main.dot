digraph "CFG for 'main' function" {
	label="CFG for 'main' function";

	Node0xc0da70 [shape=record,label="{entry:\l  %retval = alloca i32, align 4, !clap !0\l  %argc.addr = alloca i32, align 4\l  %argv.addr = alloca i8**, align 8\l  %n = alloca i32, align 4\l  %saved_stack = alloca i8*\l  %i = alloca i32, align 4\l  %cleanup.dest.slot = alloca i32\l  store i32 0, i32* %retval\l  store i32 %argc, i32* %argc.addr, align 4\l  store i8** %argv, i8*** %argv.addr, align 8\l  store i32 3, i32* %n, align 4\l  %0 = load i32* %n, align 4\l  %1 = zext i32 %0 to i64\l  %2 = call i8* @llvm.stacksave()\l  store i8* %2, i8** %saved_stack\l  %vla = alloca i32, i64 %1, align 16\l  store i32 0, i32* %i, align 4\l  br label %for.cond\l}"];
	Node0xc0da70 -> Node0xc0dad0;
	Node0xc0dad0 [shape=record,label="{for.cond:                                         \l  %3 = load i32* %i, align 4\l  %4 = load i32* %n, align 4\l  %cmp = icmp slt i32 %3, %4\l  br i1 %cmp, label %for.body, label %for.end\l|{<s0>T|<s1>F}}"];
	Node0xc0dad0:s0 -> Node0xc0db30;
	Node0xc0dad0:s1 -> Node0xc0dd10;
	Node0xc0db30 [shape=record,label="{for.body:                                         \l  %5 = load i32* %argc.addr, align 4\l  %rem = srem i32 %5, 2\l  %tobool = icmp ne i32 %rem, 0\l  br i1 %tobool, label %if.then, label %if.else\l|{<s0>T|<s1>F}}"];
	Node0xc0db30:s0 -> Node0xc0db90;
	Node0xc0db30:s1 -> Node0xc0dbf0;
	Node0xc0db90 [shape=record,label="{if.then:                                          \l  %6 = load i32* %i, align 4\l  %idxprom = sext i32 %6 to i64\l  %arrayidx = getelementptr inbounds i32* %vla, i64 %idxprom\l  store i32 3, i32* %arrayidx, align 4\l  br label %if.end\l}"];
	Node0xc0db90 -> Node0xc0dc50;
	Node0xc0dbf0 [shape=record,label="{if.else:                                          \l  %7 = load i32* %i, align 4\l  %idxprom1 = sext i32 %7 to i64\l  %arrayidx2 = getelementptr inbounds i32* %vla, i64 %idxprom1\l  store i32 4, i32* %arrayidx2, align 4\l  br label %if.end\l}"];
	Node0xc0dbf0 -> Node0xc0dc50;
	Node0xc0dc50 [shape=record,label="{if.end:                                           \l  br label %for.inc\l}"];
	Node0xc0dc50 -> Node0xc0dcb0;
	Node0xc0dcb0 [shape=record,label="{for.inc:                                          \l  %8 = load i32* %i, align 4\l  %inc = add nsw i32 %8, 1\l  store i32 %inc, i32* %i, align 4\l  br label %for.cond\l}"];
	Node0xc0dcb0 -> Node0xc0dad0;
	Node0xc0dd10 [shape=record,label="{for.end:                                          \l  store i32 0, i32* %retval\l  store i32 1, i32* %cleanup.dest.slot\l  %9 = load i8** %saved_stack\l  call void @llvm.stackrestore(i8* %9)\l  %10 = load i32* %retval\l  ret i32 %10\l}"];
}
